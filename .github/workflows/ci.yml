name: CI

on:
  push:
    branches: [ 1lab ]
  pull_request:
    branches: [ 1lab ]

jobs:
  test-fsharp:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore

    - name: Install Fantomas
      run: dotnet tool install fantomas --global

    - name: Check formatting
      run: fantomas --check .
      
    - name: Build
      run: dotnet build --no-restore -warnaserror
      
    - name: Test
      run: dotnet test Tests/Tests.fsproj --no-build --verbosity normal --collect:"XPlat Code Coverage"
      
    - name: Extract coverage report
      run: |
        report_path=$(find . -type f -name 'coverage.cobertura.xml' | head -n 1)
        echo "Report found: $report_path"
        cp "$report_path" coverage.xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: coverage.xml
        fail_ci_if_error: false

    - name: Run main program
      run: dotnet run --no-build --project 1lab.fsproj

  test-cpp:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install C++ tools
      run: |
        sudo apt-get update
        sudo apt-get install -y g++ clang-format cppcheck
    
    - name: Check C++ formatting
      run: |
        find c++ -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror --style=Google
    
    - name: Static analysis with cppcheck
      run: |
        cppcheck --enable=all --error-exitcode=1 --suppress=missingIncludeSystem c++/
    
    - name: Compile C++ unit tests
      run: |
        cd c++
        g++ -std=c++17 -Wall -Wextra -Werror -O2 -o test_lab1 test_lab1.cpp lab1_functions.cpp
    
    - name: Run C++ unit tests
      run: |
        cd c++
        ./test_lab1